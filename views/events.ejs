

<!-- Updated header with better styling and light gray background -->
<div class="events-header">
    <div class="header-content">
        <div class="header-left">
            <h1>Upcoming Events</h1>
            <button class="search-button" id="searchButton">
                <i class="fas fa-search"></i>
            </button>
        </div>
        <div class="events-controls">
            <div class="view-toggles">
                <button class="view-toggle active" data-view="grid">
                    <i class="fas fa-th-large"></i>
                </button>
                <button class="view-toggle" data-view="list">
                    <i class="fas fa-list"></i>
                </button>
            </div>
            <a href="/submit_event" class="submit-event-btn">
                <i class="fas fa-plus"></i>
                Submit Event
            </a>
        </div>
    </div>
</div>

<!-- Improved search bar styling -->
<div class="search-container" id="searchBar" style="display: none;">
    <div class="search-wrapper">
        <i class="fas fa-search search-icon"></i>
        <input type="text" id="eventSearch" placeholder="Search events by title, location, or date...">
        <button class="search-clear" id="searchClear" style="display: none;">
            <i class="fas fa-times"></i>
        </button>
    </div>
</div>

<!-- Refined event tags with better styling -->
<div class="event-tags-container">
    <div class="event-tags">
        <a href="/events" class="event-tag <%= !selectedTag ? 'active' : '' %>">
            <span class="tag-text">All Events</span>
        </a>
        <% Object.entries(tagCounts).forEach(([tag, count]) => { %>
            <a href="/events?tag=<%= tag %>" class="event-tag <%= selectedTag === tag ? 'active' : '' %>">
                <span class="tag-text"><%= tag %></span>
                <span class="tag-count"><%= count %></span>
            </a>
        <% }); %>
    </div>
</div>

<!-- Enhanced events grid with better card design -->
<div class="events-grid" id="eventsGrid">
    <% events.forEach(function(event) { 
        const timeZone = event.timezone || 'America/New_York';
        const startDate = moment.tz(event.dtstart, timeZone);
        const endDate = moment.tz(event.dtend, timeZone);
        const eventType = (event.type || 'general').toLowerCase();
    %>
        <% if (isAuthenticated) { %>
            <a href="/events/event/<%= event.eventId %>" class="event-card">
                <div class="event-image-container">
                    <% if (event.image) { %>
                        <img src="<%= formatImagePath(event.image) %>" alt="<%= event.summary %>" class="event-image">
                    <% } else { %>
                        <div class="event-placeholder">
                            <i class="fas fa-calendar-alt"></i>
                        </div>
                    <% } %>
                    <div class="event-type-badge">
                        <%= eventType %>
                    </div>
                </div>
                <div class="event-content">
                    <h3 class="event-title"><%= event.summary %></h3>
                    <div class="event-meta">
                        <div class="event-date">
                            <i class="fas fa-calendar"></i>
                            <%= startDate.format('ddd, MMM D, YYYY') %>
                        </div>
                        <div class="event-time">
                            <i class="fas fa-clock"></i>
                            <%= startDate.format('h:mm A') %> - <%= endDate.format('h:mm A') %>
                            <span class="timezone">(<%= startDate.format('z') %>)</span>
                        </div>
                        <% if (event.organizer) { %>
                            <div class="event-organizer">
                                <i class="fas fa-user"></i>
                                <%= event.organizer %>
                            </div>
                        <% } %>
                        <div class="event-location">
                            <i class="fas fa-map-marker-alt"></i>
                            <%= event.location || 'Location TBD' %>
                        </div>
                    </div>
                </div>
            </a>
        <% } else { %>
            <div class="event-card locked">
                <div class="event-image-container">
                    <% if (event.image) { %>
                        <img src="<%= formatImagePath(event.image) %>" alt="<%= event.summary %>" class="event-image">
                    <% } else { %>
                        <div class="event-placeholder">
                            <i class="fas fa-calendar-alt"></i>
                        </div>
                    <% } %>
                    <div class="event-type-badge">
                        <%= eventType %>
                    </div>
                </div>
                <div class="event-content">
                    <h3 class="event-title"><%= event.summary %></h3>
                    <div class="event-signin-prompt">
                        <div class="signin-icon">
                            <i class="fas fa-user"></i>
                        </div>
                        <p>Sign in to view event details and RSVP</p>
                        <a href="/signin?redirect=/events/event/<%= event.eventId %>" class="signin-btn">
                            Sign In to View Details
                        </a>
                    </div>
                </div>
            </div>
        <% } %>
    <% }); %>
</div>

<style>
/* Updated CSS variables and color scheme */
:root {
    --primary-color: #730000;
    --primary-dark: #5c0000;
    --primary-hover: #8a0000;
    --secondary-color: #f5f5f5;
    --accent-color: #e2e8f0;
    --text-color: #334155;
    --text-light: #64748b;
    --text-dark: #1e293b;
    --border-color: #e2e8f0;
    --shadow-sm: 0 1px 3px rgba(0, 0, 0, 0.1);
    --shadow-md: 0 4px 12px rgba(0, 0, 0, 0.15);
    --border-radius: 12px;
    --transition: all 0.3s ease;
}

body {
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
    background-color: #f8fafc;
    margin: 0;
    padding: 0;
    color: var(--text-color);
    line-height: 1.6;
}

/* Redesigned header with light gray background */
.events-header {
    background: var(--secondary-color);
    border-bottom: 1px solid var(--border-color);
    padding: 2rem 0;
    margin-top: 80px;
    box-shadow: var(--shadow-sm);
}

.header-content {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
}

.header-left {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.header-left h1 {
    font-size: 2rem;
    font-weight: 700;
    color: var(--text-dark);
    margin: 0;
}

.search-button {
    background: white;
    border: 1px solid var(--border-color);
    padding: 0.75rem;
    border-radius: 8px;
    cursor: pointer;
    color: var(--text-color);
    font-size: 1.1rem;
    transition: var(--transition);
    box-shadow: var(--shadow-sm);
}

.search-button:hover {
    color: var(--primary-color);
    border-color: var(--primary-color);
    transform: translateY(-1px);
}

.events-controls {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.view-toggles {
    display: flex;
    background: white;
    border-radius: 8px;
    padding: 0.25rem;
    box-shadow: var(--shadow-sm);
    border: 1px solid var(--border-color);
}

.view-toggle {
    background: none;
    border: none;
    padding: 0.75rem;
    cursor: pointer;
    color: var(--text-light);
    font-size: 1rem;
    border-radius: 6px;
    transition: var(--transition);
    min-width: 44px;
}

.view-toggle:hover {
    color: var(--primary-color);
    background: var(--accent-color);
}

.view-toggle.active {
    color: white;
    background: var(--primary-color);
}

.submit-event-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.875rem 1.5rem;
    background: var(--primary-color);
    color: white;
    text-decoration: none;
    border-radius: var(--border-radius);
    font-weight: 600;
    font-size: 0.95rem;
    transition: var(--transition);
    box-shadow: var(--shadow-sm);
    min-height: 44px;
}

.submit-event-btn:hover {
    background: var(--primary-hover);
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
    color: white;
}

/* Enhanced search container */
.search-container {
    background: white;
    margin: 0 auto;
    max-width: 1200px;
    padding: 0 1.5rem 1.5rem;
}

.search-wrapper {
    position: relative;
    max-width: 500px;
}

.search-icon {
    position: absolute;
    left: 1rem;
    top: 50%;
    transform: translateY(-50%);
    color: var(--text-light);
    font-size: 0.9rem;
}

.search-wrapper input {
    width: 100%;
    padding: 0.875rem 1rem 0.875rem 2.5rem;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    font-size: 1rem;
    background: white;
    transition: var(--transition);
    box-shadow: var(--shadow-sm);
}

.search-wrapper input:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 3px rgba(115, 0, 0, 0.1);
}

.search-clear {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    color: var(--text-light);
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 4px;
    transition: var(--transition);
}

.search-clear:hover {
    color: var(--primary-color);
    background: var(--accent-color);
}

/* Improved event tags */
.event-tags-container {
    background: white;
    border-bottom: 1px solid var(--border-color);
    padding: 1.5rem 0;
}

.event-tags {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1.5rem;
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
}

.event-tag {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    text-decoration: none;
    color: var(--text-color);
    background: var(--accent-color);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 500;
    transition: var(--transition);
    border: 1px solid transparent;
}

.event-tag:hover {
    background: var(--secondary-color);
    border-color: var(--border-color);
    transform: translateY(-1px);
}

.event-tag.active {
    background: var(--primary-color);
    color: white;
    border-color: var(--primary-color);
}

.tag-count {
    background: rgba(255, 255, 255, 0.2);
    padding: 0.125rem 0.375rem;
    border-radius: 10px;
    font-size: 0.75rem;
    font-weight: 600;
}

.event-tag.active .tag-count {
    background: rgba(255, 255, 255, 0.3);
}

/* Enhanced events grid */
.events-grid {
    max-width: 1200px;
    margin: 2rem auto;
    padding: 0 1.5rem;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: 1.5rem;
}

.event-card {
    display: flex;
    flex-direction: column;
    background: white;
    border-radius: var(--border-radius);
    overflow: hidden;
    box-shadow: var(--shadow-sm);
    transition: var(--transition);
    text-decoration: none;
    color: inherit;
    border: 1px solid var(--border-color);
    height: 100%;
}

.event-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-md);
}

.event-card.locked {
    opacity: 0.8;
}

.event-image-container {
    position: relative;
    height: 200px;
    overflow: hidden;
}

.event-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: var(--transition);
}

.event-card:hover .event-image {
    transform: scale(1.05);
}

.event-placeholder {
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, var(--accent-color), var(--secondary-color));
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-light);
    font-size: 2rem;
}

.event-type-badge {
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    background: var(--primary-color);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 15px;
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: capitalize;
    box-shadow: var(--shadow-sm);
}

.event-content {
    padding: 1.5rem;
    flex-grow: 1;
    display: flex;
    flex-direction: column;
}

.event-title {
    font-size: 1.25rem;
    font-weight: 700;
    color: var(--text-dark);
    margin: 0 0 1rem 0;
    line-height: 1.3;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

.event-meta {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    margin-top: auto;
}

.event-meta > div {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    color: var(--text-color);
}

.event-meta i {
    color: var(--primary-color);
    width: 16px;
    text-align: center;
}

.timezone {
    color: var(--text-light);
    font-size: 0.8rem;
}

/* Enhanced signin prompt styling */
.event-signin-prompt {
    text-align: center;
    padding: 1rem;
    margin-top: auto;
    background: var(--secondary-color);
    border-radius: 8px;
}

.signin-icon {
    color: var(--primary-color);
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
}

.event-signin-prompt p {
    color: var(--text-color);
    margin: 0.5rem 0 1rem 0;
    font-size: 0.9rem;
}

.signin-btn {
    display: inline-block;
    background: var(--primary-color);
    color: white;
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 600;
    font-size: 0.9rem;
    transition: var(--transition);
}

.signin-btn:hover {
    background: var(--primary-hover);
    transform: translateY(-1px);
    color: white;
}

/* List view styles */
.events-grid.list-view {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.events-grid.list-view .event-card {
    flex-direction: row;
    height: auto;
}

.events-grid.list-view .event-image-container {
    width: 250px;
    height: 150px;
    flex-shrink: 0;
}

.events-grid.list-view .event-content {
    padding: 1rem 1.5rem;
}

.events-grid.list-view .event-title {
    font-size: 1.1rem;
    margin-bottom: 0.75rem;
}

.events-grid.list-view .event-meta {
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1rem;
}

/* Mobile responsiveness */
@media (max-width: 768px) {
    .header-content {
        flex-direction: column;
        align-items: stretch;
        gap: 1rem;
    }

    .header-left {
        justify-content: space-between;
    }

    .events-controls {
        justify-content: center;
    }

    .submit-event-btn {
        width: 100%;
        justify-content: center;
        margin-top: 0.5rem;
    }

    .events-grid {
        grid-template-columns: 1fr;
        padding: 0 1rem;
    }

    .events-grid.list-view .event-card {
        flex-direction: column;
    }

    .events-grid.list-view .event-image-container {
        width: 100%;
        height: 200px;
    }

    .event-tags {
        padding: 0 1rem;
    }

    .search-container {
        padding: 0 1rem 1.5rem;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const viewToggles = document.querySelectorAll('.view-toggle');
    const eventsGrid = document.getElementById('eventsGrid');
    
    viewToggles.forEach(toggle => {
        toggle.addEventListener('click', function() {
            const view = this.getAttribute('data-view');
            
            viewToggles.forEach(t => t.classList.remove('active'));
            this.classList.add('active');
            
            if (view === 'list') {
                eventsGrid.classList.add('list-view');
            } else {
                eventsGrid.classList.remove('list-view');
            }
        });
    });

    const searchButton = document.getElementById('searchButton');
    const searchBar = document.getElementById('searchBar');
    const searchInput = document.getElementById('eventSearch');
    const searchClear = document.getElementById('searchClear');
    const eventCards = document.querySelectorAll('.event-card');

    searchButton.addEventListener('click', function() {
        const isVisible = searchBar.style.display !== 'none';
        searchBar.style.display = isVisible ? 'none' : 'block';
        
        if (!isVisible) {
            searchInput.focus();
        } else {
            searchInput.value = '';
            searchClear.style.display = 'none';
            // Reset all cards
            eventCards.forEach(card => card.style.display = '');
        }
    });

    searchInput.addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase().trim();
        searchClear.style.display = searchTerm ? 'block' : 'none';
        
        eventCards.forEach(card => {
            const title = card.querySelector('.event-title')?.textContent.toLowerCase() || '';
            const location = card.querySelector('.event-location')?.textContent.toLowerCase() || '';
            const date = card.querySelector('.event-date')?.textContent.toLowerCase() || '';
            const organizer = card.querySelector('.event-organizer')?.textContent.toLowerCase() || '';
            
            const matches = title.includes(searchTerm) || 
                          location.includes(searchTerm) || 
                          date.includes(searchTerm) ||
                          organizer.includes(searchTerm);
            
            card.style.display = matches ? '' : 'none';
        });
    });

    searchClear.addEventListener('click', function() {
        searchInput.value = '';
        this.style.display = 'none';
        eventCards.forEach(card => card.style.display = '');
        searchInput.focus();
    });

    // Close search on escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && searchBar.style.display !== 'none') {
            searchBar.style.display = 'none';
            searchInput.value = '';
            searchClear.style.display = 'none';
            eventCards.forEach(card => card.style.display = '');
        }
    });
});
</script>


